@use '../mixins' as *;

.columns {
	padding-inline: var(--spacing-md);

	.container > & {
		padding-inline: 0;
	}

	// Default/auto layout
	display: grid;
	grid-gap: var(--spacing-md);

	@include container-width-up('narrow') {
		grid-gap: var(--spacing-lg);
	}

	&--2, &--4, &--6 {
		&[data-allow-layout-stacking="true"] {
			grid-template-columns: repeat(1, 1fr);

			@include container-width-up('small') {
				grid-template-columns: repeat(2, 1fr);
			}
		}
	}

	&--4 {
		&[data-allow-layout-stacking="true"] {
			@include container-width-up('narrow') {
				grid-template-columns: repeat(4, 1fr);
			}
		}
	}

	&--3, &--6 {
		&[data-allow-layout-stacking="true"] {
			@include container-width-up('narrower') {
				grid-template-columns: repeat(3, 1fr);
			}
		}
	}

	&--5 {
		&[data-allow-layout-stacking="true"] {
			@include container-width-up('narrow') {
				grid-template-columns: repeat(5, 1fr);
			}
		}
	}

	&--6 {
		&[data-allow-layout-stacking="true"] {
			@include container-width-up('narrow') {
				grid-template-columns: repeat(5, 1fr);
			}
		}
	}

	// Adjust layout if any of the columns has a preset width
	&:has(.columns__column--has-own-width) {
		display: flex;
		gap: var(--spacing-md);

		@include container-width-up('narrow') {
			gap: var(--spacing-lg);
		}
	}
}
